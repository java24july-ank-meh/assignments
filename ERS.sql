/*Drop database if it exists*/
DROP USER ers CASCADE;

/*Create the database user*/
CREATE USER ers
IDENTIFIED BY erspass
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA 10M ON users;

GRANT connect to ers;
GRANT resource to ers;
GRANT create session to ers;
GRANT CREATE TABLE TO ers;
GRANT CREATE view To era;

/*Connect as new user, otherwise will use current user*/
CONNECT ers/erspass;

/*Create tables*/
CREATE TABLE ERS_USER_ROLES (
    UR_ID NUMBER PRIMARY KEY,
    UR_ROLE VARCHAR2(40)
);
DROP TABLE ERS_USERS;
CREATE TABLE ERS_USERS (
    U_ID NUMBER PRIMARY KEY,
    U_USERNAME VARCHAR2(40) UNIQUE NOT NULL,
    U_PASSWORD VARCHAR2(40) NOT NULL,
    U_FIRSTNAME VARCHAR2(30),
    U_LASTNAME VARCHAR2(30),
    U_EMAIL VARCHAR2(100) UNIQUE,
    UR_ID NUMBER NOT NULL
);

ALTER TABLE ERS_USERS
    ADD FOREIGN KEY (UR_ID) REFERENCES ERS_USER_ROLES(UR_ID);

CREATE TABLE ERS_REIMBURSEMENT_STATUS (
    RS_ID NUMBER PRIMARY KEY,
    RS_STATUS VARCHAR2(30) NOT NULL
);

CREATE TABLE ERS_REIMBURSEMENT_TYPE (
    RT_ID NUMBER PRIMARY KEY,
    RT_TYPE VARCHAR2(30) NOT NULL
);

CREATE TABLE ERS_REIMBURSEMENTS (
    R_ID NUMBER PRIMARY KEY,
    R_AMOUNT NUMBER NOT NULL,
    R_DESCRIPTION VARCHAR2(100),
    R_RECEIPT BLOB,
    R_SUBMITTED TIMESTAMP NOT NULL,
    R_RESOLVED TIMESTAMP,
    U_ID_AUTHOR NUMBER NOT NULL,
    U_ID_RESOLVER NUMBER,
    RT_TYPE NUMBER NOT NULL,
    RT_STATUS NUMBER NOT NULL
);

ALTER TABLE ERS_REIMBURSEMENTS ADD FOREIGN KEY(U_ID_AUTHOR) REFERENCES ERS_USERS(U_ID) ON DELETE CASCADE;
ALTER TABLE ERS_REIMBURSEMENTS ADD FOREIGN KEY(U_ID_RESOLVER) REFERENCES ERS_USERS(U_ID) ON DELETE CASCADE;
ALTER TABLE ERS_REIMBURSEMENTS ADD FOREIGN KEY(RT_TYPE) REFERENCES ERS_REIMBURSEMENT_TYPE(RT_ID);
ALTER TABLE ERS_REIMBURSEMENTS ADD FOREIGN KEY(RT_STATUS) REFERENCES ERS_REIMBURSEMENT_STATUS(RS_ID);

INSERT INTO ERS_USERS VALUES (1, 'dummy', 'dummy', 'Dummy', 'Jones', 'dummyjones@gmail.com', 1);

INSERT INTO ERS_USER_ROLES VALUES (1, 'employee');
INSERT INTO ERS_USER_ROLES VALUES (1, 'manager');

INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES (1, 'pending');
INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES (2, 'resolved');

INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (1, 'medical');
INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (2, 'travel');
INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (3, 'business');

/*Create sequences*/
CREATE SEQUENCE SQ_PK_USERS
START WITH 1
INCREMENT BY 1;
/

CREATE SEQUENCE SQ_PK_REIMBURSEMENTS
START WITH 1
INCREMENT BY 1;
/

/*Create triggers*/
CREATE OR REPLACE TRIGGER TR_INSERT_USERS
BEFORE INSERT ON ERS_USERS
FOR EACH ROW
BEGIN
    SELECT SQ_PK_USERS.NEXTVAL INTO :NEW.U_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSEMENTS
BEFORE INSERT ON ERS_REIMBURSEMENTS
FOR EACH ROW
BEGIN
    SELECT SQ_PK_REIMBURSEMENTS.NEXTVAL INTO :NEW.R_ID FROM DUAL;
END;
/