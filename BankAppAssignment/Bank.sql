CONNECT superuser/p4ssw0rd;

CREATE TABLE BANK_USERS(
	USER_ID NUMBER PRIMARY KEY,
    USERNAME VARCHAR2(200) NOT NULL,
    PASSCODE VARCHAR2(200) NOT NULL
);

ALTER TABLE BANK_USERS ADD SUPER NUMBER;
ALTER TABLE ACCOUNTS ADD CONSTRAINT AMOUNT CHECK(AMOUNT >= 0);
ALTER TABLE BANK_USERS ADD CONSTRAINT USERNAME UNIQUE(USERNAME);

DELETE FROM BANK_USERS;

TRUNCATE TABLE BANK_USERS CASCADE;
TRUNCATE TABLE ACCOUNTS;

CREATE TABLE ACCOUNTS (
	BANK_ACCOUNT_ID NUMBER PRIMARY KEY,
	USER_ID NUMBER NOT NULL,
	ACCOUNT_NAME VARCHAR2(200) NOT NULL,
	AMOUNT NUMBER NOT NULL
);

ALTER TABLE ACCOUNTS ADD CONSTRAINT FK_USER_ID FOREIGN KEY (USER_ID)
    REFERENCES BANK_USERS (USER_ID) ON DELETE CASCADE;

ALTER TABLE ACCOUNTS ADD CONSTRAINT UNIQUE_ACCOUNT_NAME UNIQUE (ACCOUNT_NAME);

/*Create sequences*/
CREATE SEQUENCE SQ_USER_ID
START WITH 1
INCREMENT BY 1;
/

CREATE SEQUENCE SQ_BANK_ACCOUNT_ID
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TR_INSERT_USER
BEFORE INSERT ON BANK_USERS
FOR EACH ROW
BEGIN
    SELECT SQ_USER_ID.NEXTVAL INTO :NEW.USER_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_ACCOUNT
BEFORE INSERT ON ACCOUNTS
FOR EACH ROW
BEGIN
    SELECT SQ_BANK_ACCOUNT_ID.NEXTVAL INTO:NEW.BANK_ACCOUNT_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_DELETE_ACCOUNT
BEFORE DELETE ON BANK_USERS
FOR EACH ROW
BEGIN
    SELECT SQ_BANK_ACCOUNT_ID.NEXTVAL INTO:NEW.BANK_ACCOUNT_ID FROM DUAL;
END;
/

CREATE OR REPLACE PROCEDURE ADD_TO_AMOUNT (U_ID NUMBER,ACCOUNTNAME VARCHAR2,AMNT NUMBER, TOTAL OUT NUMERIC) IS
BEGIN
    UPDATE ACCOUNTS SET AMOUNT = AMOUNT + AMNT WHERE USER_ID = U_ID AND ACCOUNT_NAME = ACCOUNTNAME;
    SELECT AMOUNT INTO TOTAL FROM ACCOUNTS WHERE USER_ID = U_ID AND ACCOUNT_NAME = ACCOUNTNAME;
END;
/

CREATE OR REPLACE PROCEDURE LOGIN (U_ID OUT NUMERIC,USER_NAME VARCHAR2,PASS_CODE VARCHAR2, SUPER_ID OUT NUMERIC) IS
BEGIN
    SELECT USER_ID INTO U_ID FROM BANK_USERS WHERE USER_NAME = USERNAME AND PASSCODE = PASS_CODE;
    SELECT SUPER INTO SUPER_ID FROM BANK_USERS WHERE USER_NAME = USERNAME AND PASSCODE = PASS_CODE;
END;
/

DECLARE
TOTAL NUMERIC;
BEGIN
    ADD_TO_AMOUNT(3,'account', 20, TOTAL);
    DBMS_OUTPUT.PUT_LINE(TOTAL);
END;

CREATE OR REPLACE PROCEDURE SUBTRACT_FROM_AMOUNT (U_ID NUMBER,ACCOUNTNAME VARCHAR2,AMNT NUMBER, TOTAL OUT NUMERIC) IS
BEGIN
    UPDATE ACCOUNTS SET AMOUNT = AMOUNT - AMNT WHERE USER_ID = U_ID AND ACCOUNT_NAME = ACCOUNTNAME;
    SELECT AMOUNT INTO TOTAL FROM ACCOUNTS WHERE USER_ID = U_ID AND ACCOUNT_NAME = ACCOUNTNAME;
END;
/

CREATE OR REPLACE PROCEDURE ADD_ACCOUNT (USERID NUMBER, ACCOUNTNAME VARCHAR2, AMNT NUMBER) AS
BEGIN
    INSERT INTO ACCOUNTS (USER_ID, ACCOUNT_NAME, AMOUNT) VALUES (USERID,ACCOUNTNAME,AMNT);
END;
/

CREATE OR REPLACE PROCEDURE ADD_USER (USER_NAME VARCHAR2, PASS_CODE VARCHAR2, SUP NUMBER) AS
BEGIN
    INSERT INTO BANK_USERS (USERNAME, PASSCODE, SUPER) VALUES (USER_NAME, PASS_CODE, SUP);
END;
/

CREATE OR REPLACE PROCEDURE VIEW_ALL_ACCOUNTS (U_ID NUMBER) AS
BEGIN
    SELECT * FROM ACCOUNTS WHERE USER_ID = U_ID;
END;
/

INSERT INTO BANK_USERS (USERNAME, PASSCODE, SUPER) VALUES ('superu','password',1);
INSERT INTO BANK_USERS (USERNAME, PASSCODE) VALUES ('Ankit Garg','favestudentjackson');

INSERT INTO BANK_USERS (USERNAME, PASSCODE) VALUES ('Test','Test');

INSERT INTO ACCOUNTS (USER_ID, ACCOUNT_NAME, AMOUNT) VALUES (21,'Savings',0);
INSERT INTO ACCOUNTS (USER_ID, ACCOUNT_NAME, AMOUNT) VALUES (21,'Checking',200);

INSERT INTO ACCOUNTS (USER_ID, ACCOUNT_NAME, AMOUNT) VALUES (3,'Savings',0);
INSERT INTO ACCOUNTS (USER_ID, ACCOUNT_NAME, AMOUNT) VALUES (3,'Checking',200);

INSERT INTO ACCOUNTS (USER_ID, ACCOUNT_NAME, AMOUNT) VALUES (4,'decimal',500.23112421241);
INSERT INTO ACCOUNTS (USER_ID, ACCOUNT_NAME, AMOUNT) VALUES (4,'decimal',800.33);

