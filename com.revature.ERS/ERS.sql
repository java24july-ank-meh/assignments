/*Drop database if it exists*/
DROP USER ERS CASCADE;

/*Create the database user*/
CREATE USER ERS
IDENTIFIED BY ERS
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA 10M ON users;

GRANT connect to ERS;
GRANT resource to ERS;
GRANT create session to ERS;
GRANT CREATE TABLE TO ERS;
GRANT CREATE view To ERS;

/*Connect as new user, otherwise will use current user*/
CONNECT ERS/ERS;

/*Create tables*/
CREATE TABLE ERS_USERS (
    U_ID 		NUMBER(*.0) PRIMARY KEY NOT NULL,
	U_USERNAME 	VARCHAR2(40 BYTE) NOT NULL UNIQUE,
	U_PASSWORD 	VARCHAR2(40 BYTE) NOT NULL,
	U_FIRSTNAME VARCHAR2(40 BYTE),
	U_LASTNAME 	VARCHAR2(40 BYTE),
	U_EMAIL 	VARCHAR2(40 BYTE), UNIQUE
	UR_ID		NUMBER(*.0) NOT NULL
);

CREATE TABLE ERS_USER_ROLES (
    UR_ID 		NUMBER(*.0) PRIMARY KEY NOT NULL,
	UR_ROLE 	VARCHAR2(40 BYTE),
);

CREATE TABLE ERS_REIMBURSEMENTS (
    R_ID 			NUMBER(*.0) PRIMARY KEY NOT NULL,
	R_AMOUNT 		NUMBER(22.2) NOT NULL,
	R_DESCRIPTION 	VARCHAR2(100 BYTE),
	R_RECEIPT 		BLOB,
	R_SUBMITTED 	TIMESTAMP NOT NULL,
	R_RESOLVED 		TIMESTAMP,
	U_ID_AUTHOR		NUMBER(*.0) NOT NULL,
	U_ID_RESOLVER	NUMBER(*.0),
	RT_TYPE			NUMBER(*.0) NOT NULL,
	RT_STATUS		NUMBER(*.0) NOT NULL
);

CREATE TABLE ERS_REIMBURSEMENT_STATUS (
    RS_ID 		NUMBER(*.0) PRIMARY KEY NOT NULL,
	RS_STATUS 	VARCHAR2(30 BYTE) NOT NULL,
);

CREATE TABLE ERS_REIMBURSEMENT_TYPE (
    RS_ID 		NUMBER(*.0) PRIMARY KEY NOT NULL,
	RT_TYPE 	VARCHAR2(30 BYTE) NOT NULL,
);

/*Create foreign keys*/
ALTER TABLE ERS_USERS ADD CONSTRAINT SYS_C007742 FOREIGN KEY (UR_ID)
    REFERENCES ERS_USER_ROLES (UR_ID) ON DELETE CASCADE;
	
ALTER TABLE ERS_REIMBURSEMENTS ADD CONSTRAINT SYS_C007753 FOREIGN KEY (U_ID_AUTHOR)
    REFERENCES ERS_USERS (UR_ID) ON DELETE CASCADE;

ALTER TABLE ERS_REIMBURSEMENTS ADD CONSTRAINT SYS_C007754 FOREIGN KEY (U_ID_RESOLVER)
    REFERENCES ERS_USERS (UR_ID) ON DELETE CASCADE;
	
ALTER TABLE ERS_REIMBURSEMENTS ADD CONSTRAINT SYS_C007755 FOREIGN KEY (RT_TYPE)
    REFERENCES ERS_REIMBURSEMENT_TYPE (RT_TYPE) ON DELETE CASCADE;
	
ALTER TABLE ERS_REIMBURSEMENTS ADD CONSTRAINT SYS_C007756 FOREIGN KEY (RT_STATUS)
    REFERENCES ERS_REIMBURSEMENT_STATUS (RT_STATUS) ON DELETE CASCADE;

/*Create sequences*/
CREATE SEQUENCE SQ_PK_USERS
START WITH 1
INCREMENT BY 1;
/

CREATE SEQUENCE SQ_PK_USER_ROLES
START WITH 1
INCREMENT BY 1;
/

CREATE SEQUENCE SQ_PK_REIMBURSMENT
START WITH 1
INCREMENT BY 1;
/
CREATE SEQUENCE SQ_PK_REIMBURSMENT_STATUS
START WITH 1
INCREMENT BY 1;
/
CREATE SEQUENCE SQ_PK_REIMBURSMENT_TYPE
START WITH 1
INCREMENT BY 1;
/
/*Create triggers*/
CREATE OR REPLACE TRIGGER TR_INSERT_USER
BEFORE INSERT ON ERS_USERS
FOR EACH ROW
BEGIN
    SELECT SQ_PK_USERS.NEXTVAL INTO :NEW.U_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_USER_ROLES
BEFORE INSERT ON ERS_USER_ROLES
FOR EACH ROW
BEGIN
    SELECT SQ_PK_USER_ROLES.NEXTVAL INTO :NEW.UR_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSMENT
BEFORE INSERT ON ERS_REIMBURSEMENTS
FOR EACH ROW
BEGIN
    SELECT SQ_PK_REIMBURSMENT.NEXTVAL INTO :NEW.R_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSMENT_STATUS
BEFORE INSERT ON ERS_REIMBURSEMENT_STATUS
FOR EACH ROW
BEGIN
    SELECT SQ_PK_REIMBURSMENT_STATUS.NEXTVAL INTO :NEW.RS_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSMENT_TYPE
BEFORE INSERT ON ERS_REIMBURSEMENT_TYPE
FOR EACH ROW
BEGIN
    SELECT SQ_PK_REIMBURSMENT_TYPE.NEXTVAL INTO :NEW.RT_ID FROM DUAL;
END;
/



/*Stored Procedure*/
/*
CREATE OR REPLACE PROCEDURE SP_DEPOSIT
    (B_ID IN NUMBER, AMT IN NUMBER) AS
BEGIN
    UPDATE ERS_ACCOUNT SET BALANCE = BALANCE + AMT
        WHERE ERS_ACCOUNT_ID = B_ID;
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE SP_WITHDRAW
    (B_ID IN NUMBER, AMT IN NUMBER) AS
BEGIN
    UPDATE ERS_ACCOUNT SET BALANCE = BALANCE - AMT
        WHERE ERS_ACCOUNT_ID = B_ID;
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE SP_IS_SUPER
    (U_ID IN NUMBER, S OUT NUMBER) AS
BEGIN
    SELECT SUPER INTO S FROM ACCOUNT_USER 
        WHERE USER_ID = U_ID;
    COMMIT;
END;
/
*/

/*Populating tables*/

/*
ALTER TABLE ERS_ACCOUNT DROP CONSTRAINT  FK_ACCOUNT_ID ;
  
TRUNCATE TABLE ACCOUNT_USER DROP STORAGE;
TRUNCATE TABLE ERS_ACCOUNT DROP STORAGE;
COMMIT;
ALTER TABLE ERS_ACCOUNT ADD CONSTRAINT FK_ACCOUNT_ID FOREIGN KEY (USER_ID) REFERENCES ACCOUNT_USER (USER_ID) ON DELETE CASCADE;
*/