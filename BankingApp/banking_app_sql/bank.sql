CREATE TABLE BANKUSERS(
    USERID INTEGER,
    USERNAME VARCHAR2(200) UNIQUE,
    PASS VARCHAR2(200),
    FIRSTNAME VARCHAR2(500),
    LASTNAME VARCHAR2(500),
    ISSUPER VARCHAR2(1),
    LOGGEDIN VARCHAR2(1),
    CONSTRAINT PK_BANKUSERS PRIMARY KEY (USERID)
);
/

CREATE TABLE ACCOUNTS(
    ACCOUNTID NUMBER PRIMARY KEY,
    ACCOUNTTYPE VARCHAR2(100),
    USERID INTEGER,
    BALANCE NUMBER,
    INTERESTRATE NUMBER
);
/

CREATE TABLE ACCOUNTTYPES(
    ACCOUNTNAME VARCHAR2(100) PRIMARY KEY
);
/

ALTER TABLE ACCOUNTS
    ADD CONSTRAINT FK_USERID
    FOREIGN KEY (USERID)
    REFERENCES BANKUSERS(USERID)
    ON DELETE CASCADE;
    
ALTER TABLE ACCOUNTS
    ADD CONSTRAINT FK_ACCOUNTTYPE
    FOREIGN KEY (ACCOUNTTYPE)
    REFERENCES ACCOUNTTYPES(ACCOUNTNAME)
    ON DELETE CASCADE;
    
ALTER TABLE BANKUSERS
    MODIFY ISSUPER VARCHAR(1) NOT NULL;
    
ALTER TABLE BANKUSERS
    MODIFY LOGGEDIN VARCHAR(1) NOT NULL;

CREATE SEQUENCE SQ_PK_BANKUSERS
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TR_INSERT_BANKUSER
BEFORE INSERT ON BANKUSERS
FOR EACH ROW 
BEGIN
    SELECT SQ_PK_BANKUSERS.NEXTVAL INTO :NEW.USERID FROM DUAL;
END;
/

CREATE SEQUENCE SQ_ACCOUNTS
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TR_INSERT_ACCOUNT
BEFORE INSERT ON ACCOUNTS
FOR EACH ROW 
BEGIN
    SELECT SQ_ACCOUNTS.NEXTVAL INTO :NEW.ACCOUNTID FROM DUAL;
END;
/

CREATE OR REPLACE PROCEDURE LOGIN(U IN BANKUSERS.USERID%TYPE) AS 
BEGIN 
    UPDATE BANKUSERS SET LOGGEDIN=1 WHERE USERID=U;
END;
/

CREATE OR REPLACE PROCEDURE LOGOUT(U IN BANKUSERS.USERID%TYPE) AS
BEGIN
    UPDATE BANKUSERS SET LOGGEDIN=0 WHERE USERID=U;
END;
/

CREATE OR REPLACE PROCEDURE GET_USER_FROM_INFO(UN IN BANKUSERS.USERNAME%TYPE,
PW IN BANKUSERS.PASS%TYPE, U OUT BANKUSERS.USERID%TYPE, 
FN OUT BANKUSERS.FIRSTNAME%TYPE, LN OUT BANKUSERS.LASTNAME%TYPE, 
ISSUP OUT BANKUSERS.ISSUPER%TYPE) AS
BEGIN
    SELECT USERID, FIRSTNAME, LASTNAME, ISSUPER INTO U,FN,LN,ISSUP
    FROM BANKUSERS
    WHERE USERNAME=UN AND PASS=PW;
END;
/

