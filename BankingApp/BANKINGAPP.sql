/* Drop database if it exists */

DROP USER BANKINGAPPTEST CASCADE;

/*  create the db */

CREATE USER BANKINGAPPTEST
IDENTIFIED BY P4SSW0RD
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA 10M ON USERS;

GRANT CONNECT TO BANKINGAPPTEST;
GRANT RESOURCE TO BANKINGAPPTEST;
GRANT CREATE SESSION TO BANKINGAPPTEST;
GRANT CREATE TABLE TO BANKINGAPPTEST;
GRANT CREATe VIEW TO BANKINGAPPTEST;

/* conect as new user, otherwise will use current user */
CONNECT BANKINGAPPTEST/P4SSW0RD


/* create the tables */

CREATE TABLE BANKACCOUNT (
    BANKACCOUNT_ID INTEGER PRIMARY KEY,
    BANKACCOUNT_BALANCE INTEGER DEFAULT 0 CHECK (BANKACCOUNT_BALANCE >= 0),
    BANKUSER_ID INTEGER
);

CREATE TABLE BANKUSER (
    BANKUSER_ID INTEGER PRIMARY KEY,
    BANKUSER_NAME VARCHAR2(50) NOT NULL,
    BANKUSER_ISADMIN VARCHAR2(10) DEFAULT 'N',
    BANKUSER_PASSWORD VARCHAR2(50)
);

/* Add Foreign keys */
ALTER TABLE BANKACCOUNT ADD
    CONSTRAINT FK_USERACCOUNT_ID
    FOREIGN KEY (BANKUSER_ID)
    REFERENCES BANKUSER (BANKUSER_ID)
    ON DELETE CASCADE;
    
/* Create Sequences */
CREATE SEQUENCE SQ_BANKACCOUNT_PK
START WITH 1 INCREMENT BY 1;
    
CREATE SEQUENCE SQ_BANKUSER_PK
START WITH 1 INCREMENT BY 1;
    
    
/* Create Triggers */
CREATE OR REPLACE TRIGGER TR_BANKACCOUNT_PK
BEFORE INSERT ON BANKACCOUNT
FOR EACH ROW
BEGIN
    SELECT SQ_BANKACCOUNT_PK.NEXTVAL
    INTO :NEW.BANKACCOUNT_ID
    FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_BANKUSER_PK
BEFORE INSERT ON BANKUSER
FOR EACH ROW
BEGIN
    SELECT SQ_BANKUSER_PK.NEXTVAL
    INTO :NEW.BANKUSER_ID
    FROM DUAL;
END;
/

/* Create Procedures */

CREATE OR REPLACE PROCEDURE P_UPDATE_ACCOUNT 
(AID IN INTEGER, UID IN INTEGER, AMOUNT IN INTEGER, SUCCESS OUT VARCHAR2)
IS
BEGIN
    UPDATE BANKACCOUNT
    SET BANKACCOUNT_BALANCE = BANKACCOUNT_BALANCE + AMOUNT
    WHERE BANKACCOUNT.BANKUSER_ID = UID AND BANKACCOUNT_ID = AID;
    
    IF SQL%ROWCOUNT > 0 THEN
        SUCCESS := 'Y';
    ELSE 
        SUCCESS := 'N';
    END IF;
END;
/

/* populate db */

INSERT INTO BANKUSER (BANKUSER_NAME, BANKUSER_ISADMIN, BANKUSER_PASSWORD)
    VALUES ('ADMIN', 'Y', 'password');
    
INSERT INTO BANKUSER (BANKUSER_NAME, BANKUSER_ISADMIN, BANKUSER_PASSWORD)
    VALUES ('USER1', 'N', 'password');
    