INSERT INTO CUSTOMER (CUSTOMER_ID, CUSTOMER_FIRSTNAME, CUSTOMER_LASTNAME, CUSTOMER_AGE, CUSTOMER_PHONE, CUSTOMER_EMAIL) VALUES ('Ryan', 'Eliet', 21, '745-891-3329', 'why23@hotmail.com');
INSERT INTO CUSTOMER (CUSTOMER_ID, CUSTOMER_FIRSTNAME, CUSTOMER_LASTNAME, CUSTOMER_AGE, CUSTOMER_PHONE, CUSTOMER_EMAIL) VALUES ('Kimberly', 'Turner', 32, '876-112-9670', 'dane23@yahoo.com');
INSERT INTO CUSTOMER (CUSTOMER_ID, CUSTOMER_FIRSTNAME, CUSTOMER_LASTNAME, CUSTOMER_AGE, CUSTOMER_PHONE, CUSTOMER_EMAIL) VALUES ('Thomas', 'Vaion', 56, '225-321-7860', 'why23@hotmail.com');
INSERT INTO ACCOUNTS (ACCOUNT_BALANCE, CUSTOMER_ID) VALUES (56.98, 3422);
UPDATE ACCOUNTS SET CUSTOMER_ID = 3421 WHERE ACCOUNT_NUMBER = 15; 
UPDATE CUSTOMER SET CUSTOMER_USERNAME = 'RyanE13', CUSTOMER_PASSWORD = 'passryan' WHERE CUSTOMER_ID = 3421;
UPDATE CUSTOMER SET CUSTOMER_USERNAME = 'kIMME', CUSTOMER_PASSWORD = 'giveme' WHERE CUSTOMER_ID = 3422;
UPDATE CUSTOMER SET CUSTOMER_USERNAME = 'tommey12', CUSTOMER_PASSWORD = 'tom4me' WHERE CUSTOMER_ID = 3423;

/*Drop Database if it exists*/
DROP USER BANK_SUPER CASCADE;

/*Create the database user*/
CREATE USER BANK_SUPER
IDENTIFIED BY demthrones
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA 10M ON users;

GRANT connect to BANK_SUPER;
GRANT resource to BANK_SUPER;
GRANT create session to BANK_SUPER;
GRANT CREATE TABLE TO BANK_SUPER;
GRANT CREATE view To BANK_SUPER;

/*Connect as new user, otherwise will use current user*/
CONNECT BANK_SUPER/demthrones

/*Create Tables*/
CREATE TABLE CUSTOMER (
    CUSTOMER_ID INTEGER PRIMARY KEY,
    CUSTOMER_FIRSTNAME VARCHAR2(100),
    CUSTOMER_LASTNAME VARCHAR2(100) NOT NULL,
    CUSTOMER_USERNAME VARCHAR2(100),
    CUSTOMER_PASSWORD VARCHAR2(100),
    CUSTOMER_AGE INTEGER,
    CUSTOMER_PHONE VARCHAR2(50),
    CUSTOMER_EMAIL VARCHAR2(200)
);

CREATE TABLE ACCOUNTS (
    ACCOUNT_NUMBER INTEGER PRIMARY KEY,
    ACCOUNT_BALANCE NUMBER(10,2),
    CUSTOMER_ID INTEGER
);

/*Create Foreign Keys*/
ALTER TABLE ACCOUNTS ADD CONSTRAINT FK_CUSTOMER_ID FOREIGN KEY (CUSTOMER_ID) 
    REFERENCES CUSTOMER (CUSTOMER_ID) ON DELETE CASCADE;
    
/*Create Sequences*/
CREATE SEQUENCE SQ_PK_CUSTOMER
START WITH 3421
INCREMENT BY 1;
/
CREATE SEQUENCE SQ_PK_ACCOUNTS
START WITH 003
INCREMENT BY 2;
/

/*Create Triggers*/
CREATE OR REPLACE TRIGGER TR_INSERT_CUSTOMER
BEFORE INSERT ON CUSTOMER
FOR EACH ROW
BEGIN
    SELECT SQ_PK_CUSTOMER.NEXTVAL INTO :NEW.CUSTOMER_ID FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER TR_INSERT_ACCOUNT
BEFORE INSERT ON ACCOUNTS
FOR EACH ROW
BEGIN
    SELECT SQ_PK_ACCOUNTS.NEXTVAL INTO :NEW.ACCOUNT_NUMBER FROM DUAL;
END;
/
/*Stored Procedure*/
CREATE OR REPLACE PROCEDURE PR_DEPOSIT
     (A_NUMBER IN INTEGER, AMT IN NUMBER) AS
BEGIN 
    UPDATE ACCOUNTS SET ACCOUNT_BALANCE = ACCOUNT_BALANCE + AMT 
        WHERE ACCOUNT_NUMBER = A_NUMBER;
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE PR_WITHDRAW
    (A_NUMBER2 IN INTEGER, AMT2 IN NUMBER) AS
BEGIN
    UPDATE ACCOUNTS SET ACCOUNT_BALANCE = ACCOUNT_BALANCE + AMT2
        WHERE ACCOUNT_NUMBER = A_NUMBER2;
    COMMIT;
END;
/